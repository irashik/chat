<% layout('layout/page') -%>
<% block('title', "Чат") -%>

<p class="lead">Здесь будет чат</p>


<% if (user) { %>
<p> Добро пожаловать, <%= user.username %></p>
<% } %>


<script src="./vendor/bower_components/socket.io-client/dist/socket.io.js"></script>

<div id='room'>
    <ul></ul>
    <form>
        <input class="form-control" autocomplete="off" autofocus placeholder="Сообщение...">
        
    </form>
</div>



<script>
  
  let form = $('#room form');
  let ul = $('#room ul');
  let input = $('#room input');
  
  let socket = io.connect('', {
      reconnect: false
  });
  
  socket
          .on('message', function(username, message) {
              printMessage(username + "> " + message);
  })
          .on('leave', function(username) {
              printStatus(username + " вышел из чата");
  })
          .on('join', function(username) {
              printStatus(username + " вошел в чат");
  })
          .on('connect', function() {
              printStatus("соединение установлено");
              form.on('submit', sendMessage);
              input.prop('disabled', false);
  })
          .on('disconnect', function() {
              printStatus("соединение потеряно");
              form.off('submit', sendMessage);
              input.prop('disabled', true);
              
              this.emit('error');
  })
          .on('logout', function() {
              location.href = "/";
  })
          .on('error', function(reason) {
                    
              if (reason === "handshake unautharized") {
                  printStatus("Вы вышли из сайта");
              } else {
                  setTimeout(function() {
                      socket.socket.connect();
                  }, 500);
              }
  });
  
  
  function sendMessage() {
      let text = input.val();
      socket.emit('message', text, function() {
      printMessage("I'am" + text);
      
    });
      
      input.val('');
      return false;
  }
  
  
  
  function reconnect() {
      socket.once('error', function() {
          setTimeout(reconnect, 500);
      });
      
      socket.socket.connect();
  }
  
  function printStatus(status) {
        $('<li>').append($('<i>').text(status)).appendTo(ul);
  }
  
  function printMessage(text) {
      $('<li>').text(text).appendTo(ul);
  }
  
 
  
</script>